# =====================================================
# Redis Configuration for PDF Converter
# =====================================================
# Optimized for caching, sessions, and job queues

# =====================================================
# NETWORK
# =====================================================
bind 0.0.0.0
port 6379
timeout 0
keepalive 300

# TCP listen backlog
tcp-backlog 511

# Close the connection after a client is idle for N seconds (0 to disable)
tcp-keepalive 60

# =====================================================
# GENERAL
# =====================================================
daemonize no
supervised no
pidfile /var/run/redis_6379.pid
loglevel notice
logfile ""
databases 16

# =====================================================
# MEMORY MANAGEMENT
# =====================================================
# Set a memory usage limit (1GB default - adjust based on available RAM)
maxmemory 1gb

# Memory policy when limit is reached
# allkeys-lru: Remove any key according to LRU algorithm
# volatile-lru: Remove keys with expire set according to LRU
# allkeys-random: Remove random key
# volatile-random: Remove random key with expire set
# volatile-ttl: Remove key with nearest expire time (TTL)
# noeviction: Don't evict anything, just return an error on write operations
maxmemory-policy allkeys-lru

# Sample size for LRU eviction algorithm
maxmemory-samples 5

# =====================================================
# SECURITY
# =====================================================
# Require password authentication
requirepass RedisSecure2024!

# Disable dangerous commands in production
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""
# rename-command KEYS ""
# rename-command CONFIG ""
# rename-command DEBUG ""
# rename-command EVAL ""

# Protected mode - only allow local connections without password
protected-mode no

# =====================================================
# PERSISTENCE
# =====================================================

# RDB Snapshots
# Save the DB on disk:
# save <seconds> <changes>
# Will save the DB if both the given number of seconds and changes occurred
save 900 1      # Save if at least 1 key changed in 900 seconds
save 300 10     # Save if at least 10 keys changed in 300 seconds  
save 60 10000   # Save if at least 10000 keys changed in 60 seconds

# Stop writes if RDB snapshots fail
stop-writes-on-bgsave-error yes

# Compress string objects using LZF when dumping .rdb databases
rdbcompression yes

# Checksum the RDB file
rdbchecksum yes

# RDB filename
dbfilename dump.rdb

# RDB and AOF directory
dir /data

# =====================================================
# AOF (Append Only File) - for better durability
# =====================================================
# Enable AOF persistence
appendonly no

# AOF filename
appendfilename "appendonly.aof"

# AOF fsync policy:
# no: don't fsync, just let the OS flush the data when it wants
# always: fsync after every write to the append only log
# everysec: fsync only one time every second (compromise)
appendfsync everysec

# Don't fsync during rewrites
no-appendfsync-on-rewrite no

# AOF rewrite configuration
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# Load truncated AOF file on startup
aof-load-truncated yes

# Mixed persistence (RDB+AOF)
aof-use-rdb-preamble yes

# =====================================================
# SLOW LOG
# =====================================================
# Log queries slower than X microseconds
slowlog-log-slower-than 10000

# Maximum slow log length
slowlog-max-len 128

# =====================================================
# LATENCY MONITORING
# =====================================================
latency-monitor-threshold 100

# =====================================================
# CLIENT CONNECTION SETTINGS
# =====================================================
# Max number of clients
maxclients 10000

# Client timeout (seconds)
timeout 0

# Client output buffer limits
# client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# =====================================================
# ADVANCED CONFIG
# =====================================================
# Hash table settings
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List settings
list-max-ziplist-size -2
list-compress-depth 0

# Set settings
set-max-intset-entries 512

# Sorted set settings
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# Stream settings
stream-node-max-bytes 4096
stream-node-max-entries 100

# HyperLogLog sparse representation bytes limit
hll-sparse-max-bytes 3000

# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time
activerehashing yes

# Client query buffer limit
client-query-buffer-limit 1gb

# Protocol buffer limit
proto-max-bulk-len 512mb

# Frequency of rehashing the main dictionary
hz 10

# Enable dynamic HZ
dynamic-hz yes

# =====================================================
# INCLUDES
# =====================================================
# Include one or more other config files here
# include /path/to/local.conf
# include /path/to/other.conf

# =====================================================
# MODULES
# =====================================================
# Load modules at startup
# loadmodule /path/to/my_module.so
# loadmodule /path/to/other_module.so

# =====================================================
# TLS/SSL (commented out - enable for production)
# =====================================================
# port 0
# tls-port 6380
# tls-cert-file redis.crt
# tls-key-file redis.key
# tls-ca-cert-file ca.crt

# =====================================================
# PDF CONVERTER SPECIFIC OPTIMIZATIONS
# =====================================================

# =====================================================
# DATABASE USAGE PLAN:
# =====================================================
# Database 0: User sessions and authentication tokens
# Database 1: File upload cache and metadata
# Database 2: Conversion job queue and status
# Database 3: User quota and rate limiting
# Database 4: Notification cache
# Database 5: API response cache
# Database 6: Temporary data and locks
# Database 7: Statistics and analytics cache
# Databases 8-15: Reserved for future use

# =====================================================
# KEY EXPIRATION EXAMPLES:
# =====================================================
# Sessions: 24 hours (86400 seconds)
# File upload tokens: 1 hour (3600 seconds)  
# Conversion status cache: 1 week (604800 seconds)
# Rate limiting windows: 1 hour (3600 seconds)
# API response cache: 5 minutes (300 seconds)
# Temporary locks: 30 seconds (30 seconds)

# =====================================================
# MEMORY USAGE ESTIMATES:
# =====================================================
# User sessions: ~1KB per session
# File metadata cache: ~2KB per file
# Conversion job status: ~500 bytes per job
# Rate limiting counters: ~100 bytes per user per window
# Notification cache: ~1KB per notification
# API response cache: Variable (1KB - 10KB)

# With 1GB memory limit:
# - ~50,000 active sessions
# - ~250,000 cached file records
# - ~1,000,000 conversion job statuses
# - Plus overhead for Redis structures

# =====================================================
# PERFORMANCE NOTES:
# =====================================================
# - Using allkeys-lru for automatic memory management
# - RDB snapshots every 15 minutes or 10,000 changes
# - AOF disabled for better performance (acceptable for cache data)
# - Slow log captures queries > 10ms
# - Latency monitoring enabled for queries > 0.1ms
# - Hash tables optimized for small to medium datasets
# - Active rehashing enabled for better memory usage